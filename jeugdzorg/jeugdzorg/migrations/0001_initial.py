# Generated by Django 2.0.2 on 2018-04-20 13:22

import adminsortable.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import jeugdzorg.fields
import phonenumber_field.modelfields
import sortedm2m.fields
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('sites', '0002_alter_domain_unique'),
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('voornaam', models.CharField(blank=True, max_length=100, verbose_name='voornaam')),
                ('achternaam', models.CharField(blank=True, max_length=150, verbose_name='achternaam')),
                ('tussenvoegsel', models.CharField(blank=True, max_length=20, null=True, verbose_name='Tussenvoegsel')),
                ('email', jeugdzorg.fields.EmailToLowerField(max_length=254, null=True, unique=True)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('date_saved', models.DateTimeField(auto_now=True, null=True, verbose_name='date saved')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Gebruiker',
                'verbose_name_plural': 'Gebruikers',
            },
        ),
        migrations.CreateModel(
            name='CronjobState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('naam_command', models.CharField(max_length=255, verbose_name='Naam')),
                ('datumtijd_string', models.CharField(max_length=255, verbose_name='Datumtijd tekst')),
                ('log_command', models.TextField(blank=True, null=True, verbose_name='Log')),
            ],
            options={
                'verbose_name': 'Cronjob status',
                'verbose_name_plural': 'Cronjob statussen',
            },
        ),
        migrations.CreateModel(
            name='EventItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Naam')),
                ('value', models.CharField(blank=True, max_length=255, null=True, verbose_name='Waarde')),
                ('url', models.CharField(blank=True, max_length=255, null=True, verbose_name='Url')),
                ('timestamp', models.CharField(blank=True, max_length=255, null=True, verbose_name='Timestamp')),
                ('session_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Session id')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Gebruiker')),
            ],
            options={
                'verbose_name': 'Gebruikers gedrag',
                'verbose_name_plural': 'Gebruikers gedragingen',
            },
        ),
        migrations.CreateModel(
            name='Gebied',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('naam', models.CharField(max_length=100, verbose_name='Naam')),
                ('slug', models.SlugField(verbose_name='Slug')),
            ],
            options={
                'verbose_name': 'Gebied',
                'verbose_name_plural': 'Gebieden',
                'ordering': ('naam',),
            },
        ),
        migrations.CreateModel(
            name='Instelling',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_naam', models.CharField(blank=True, default='VraagMij', max_length=30, null=True, verbose_name='App naam')),
                ('standaard_contact_naam', models.CharField(blank=True, max_length=100, null=True, verbose_name='Standaard contact naam')),
                ('standaard_contact_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Standaard contact e-mailadres')),
                ('send_update_mail_frequentie', models.CharField(default='0 0 1 * *', help_text="Standaard is maandelijks. Crontab format 'MIN HOUR DOM MON DOW'", max_length=30, verbose_name='Update mail frequentie')),
                ('update_mail_content', models.TextField(blank=True, null=True, verbose_name='Update mail content')),
                ('update_mail_content_html', models.TextField(blank=True, null=True, verbose_name='Update mail content html')),
                ('gebruiker_email_verificatie_frequentie', models.CharField(default='0 0 1 * *', help_text="Standaard is maandelijks. Crontab format 'MIN HOUR DOM MON DOW'", max_length=30, verbose_name='Gebruiker email verificatie frequentie')),
                ('update_regelingen_frequentie', models.CharField(default='0 0 1 * *', help_text="Standaard is maandelijks. Crontab format 'MIN HOUR DOM MON DOW'", max_length=30, verbose_name='Regelingen webpagina controlle frequentie')),
                ('check_user_activity_frequentie', models.CharField(default='0 0 1 * *', help_text="Standaard is maandelijks. Crontab format 'MIN HOUR DOM MON DOW'", max_length=30, verbose_name='Gebruikers activiteit synchronisatie frequentie')),
                ('mail_account_active_check_frequentie', models.CharField(default='0 0 1 */6 *', help_text="Standaard is maandelijks. Crontab format 'MIN HOUR DOM MON DOW'", max_length=30, verbose_name='E-mailaccount actief check frequentie')),
                ('create_crontabs_frequentie', models.CharField(default='*/5 * * * *', help_text="Crontab format 'MIN HOUR DOM MON DOW'", max_length=30, verbose_name='Vernieuw crontabs frequentie')),
                ('site', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sites.Site', verbose_name='Site')),
            ],
            options={
                'verbose_name': 'Instelling',
                'verbose_name_plural': 'Instellingen',
            },
        ),
        migrations.CreateModel(
            name='Organisatie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('naam', models.CharField(max_length=255, verbose_name='Naam')),
                ('email_domeinen', models.TextField(blank=True, help_text='Voer meerdere domeinnamen in door ze met een komma te scheiden.', null=True, verbose_name='E-mailadres domeinen')),
            ],
            options={
                'verbose_name': 'Organisatie',
                'verbose_name_plural': 'Organisaties',
            },
        ),
        migrations.CreateModel(
            name='Pagina',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actief', models.BooleanField(default=False, verbose_name='Actief')),
                ('titel', models.CharField(max_length=50, verbose_name='Titel')),
                ('slug', models.SlugField(verbose_name='Slug')),
                ('inhoud', models.TextField(blank=True, help_text='Tekstopmaak kan verkregen worden door de Textile syntax te gebruiken. Zie: https://txstyle.org/', null=True, verbose_name='Inhoud')),
                ('order', models.PositiveIntegerField(db_index=True, default=0, editable=False)),
            ],
            options={
                'verbose_name': 'Pagina',
                'verbose_name_plural': "Pagina's",
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Profiel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seconden_niet_gebruikt', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Seconden niet gebruikt')),
                ('zichtbaar', models.BooleanField(default=True, help_text='Haal het vinkje, als je wil dat dit profiel onzichtbaar is voor andere.', verbose_name='Zichtbaar')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Primair e-mailadres')),
                ('telefoonnummer', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, verbose_name='Primair telefoonnummer')),
                ('telefoonnummer_2', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, verbose_name='Secundair telefoonnummer')),
                ('gebruik_email', models.BooleanField(default=True, verbose_name='Gebruik e-mailadres')),
                ('gebruik_telefoonnummer', models.BooleanField(default=True, verbose_name='Gebruik telefoonnummer')),
                ('voornaam', models.CharField(blank=True, max_length=100, null=True, verbose_name='Voornaam')),
                ('achternaam', models.CharField(blank=True, max_length=150, null=True, verbose_name='Achternaam')),
                ('tussenvoegsel', models.CharField(blank=True, max_length=20, null=True, verbose_name='Tussenvoegsel')),
                ('functie', models.CharField(blank=True, max_length=100, null=True, verbose_name='Functie')),
                ('pasfoto', models.ImageField(blank=True, null=True, upload_to='contact', verbose_name='Pasfoto')),
                ('vaardigheden', models.TextField(blank=True, null=True, verbose_name='Vaardigheden')),
                ('hou_me_op_de_hoogte_mail', models.BooleanField(default=True, verbose_name='Hou me op de hoogte via e-mail')),
                ('gebruiker_email_verificatie', models.CharField(blank=True, default='valid', max_length=100, null=True, verbose_name='Gebruiker email verificatie')),
                ('gebruiker_email_verificatie_details', models.CharField(blank=True, default='valid', max_length=100, null=True, verbose_name='Gebruiker email verificatie details')),
                ('gebied_lijst', models.ManyToManyField(blank=True, to='jeugdzorg.Gebied', verbose_name='Gebieden')),
                ('gebruiker', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profiel',
                'verbose_name_plural': 'Profielen',
                'ordering': ('achternaam',),
            },
        ),
        migrations.CreateModel(
            name='ProfielNaarOrganisatie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('volgorde', models.IntegerField(default=0, verbose_name='Volgorde')),
                ('rol', models.CharField(blank=True, max_length=100, null=True, verbose_name='Rol')),
                ('organisatie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organisatienaarprofiel', to='jeugdzorg.Organisatie', verbose_name='Organistie')),
                ('profiel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profielnaarorganisatie', to='jeugdzorg.Profiel', verbose_name='Profiel')),
            ],
            options={
                'verbose_name': 'Profiel naar organisatie',
                'verbose_name_plural': 'Profielen naar organisaties',
                'ordering': ('volgorde',),
            },
        ),
        migrations.CreateModel(
            name='ProfielNaarRegeling',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('volgorde', models.IntegerField(default=0, verbose_name='Volgorde')),
                ('rol', models.CharField(blank=True, max_length=100, null=True, verbose_name='Rol')),
                ('profiel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profielnaarregeling', to='jeugdzorg.Profiel', verbose_name='Profiel')),
            ],
            options={
                'verbose_name': 'Profiel naar regeling',
                'verbose_name_plural': 'Profielen naar regelingen',
                'ordering': ('volgorde',),
            },
        ),
        migrations.CreateModel(
            name='ProfielNaarThema',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('volgorde', models.IntegerField(default=0, verbose_name='Volgorde')),
                ('rol', models.CharField(blank=True, max_length=100, null=True, verbose_name='Rol')),
                ('profiel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profielnaarthema', to='jeugdzorg.Profiel', verbose_name='Profiel')),
            ],
            options={
                'verbose_name': 'Profiel naar thema',
                'verbose_name_plural': "Profielen naar thema's",
                'ordering': ('volgorde',),
            },
        ),
        migrations.CreateModel(
            name='Regeling',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titel', models.CharField(max_length=255, verbose_name='titel')),
                ('samenvatting', models.TextField(blank=True, null=True, verbose_name='Samenvatting')),
                ('bron', models.CharField(blank=True, max_length=255, null=True, verbose_name='Bron')),
                ('startdatum', models.DateField(blank=True, null=True, verbose_name='Start datum')),
                ('einddatum', models.DateField(blank=True, null=True, verbose_name='Eind datum')),
                ('bron_url', models.URLField(blank=True, null=True, verbose_name='Bron url')),
                ('bron_html_query', models.TextField(blank=True, null=True, verbose_name='Bron html queryselector')),
                ('bron_veranderd', models.BooleanField(default=False, verbose_name='Bron veranderd')),
                ('bron_resultaat', models.TextField(blank=True, null=True, verbose_name='Bron resultaat')),
                ('aanvraag_url', models.URLField(blank=True, null=True, verbose_name='Aaanvraag url')),
                ('datum_gecreeerd', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Datum gecreëerd')),
                ('datum_opgeslagen', models.DateTimeField(auto_now=True, null=True, verbose_name='Datum opgeslagen')),
            ],
            options={
                'verbose_name': 'Regeling',
                'verbose_name_plural': 'Regelingen',
                'ordering': ('titel',),
            },
        ),
        migrations.CreateModel(
            name='RegelingTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
                ('omschrijving', models.TextField(blank=True, null=True, verbose_name='Omschrijving')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Stadsdeel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('naam', models.CharField(max_length=100, verbose_name='Naam')),
                ('slug', models.SlugField(verbose_name='Slug')),
            ],
            options={
                'verbose_name': 'Stadsdeel',
                'verbose_name_plural': 'Stadsdelen',
                'ordering': ('naam',),
            },
        ),
        migrations.CreateModel(
            name='TaggedRegeling',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField(db_index=True, verbose_name='Object id')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jeugdzorg_taggedregeling_tagged_items', to='contenttypes.ContentType', verbose_name='Content type')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jeugdzorg_taggedregeling_items', to='jeugdzorg.RegelingTag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Thema',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, default=0, editable=False)),
                ('titel', models.CharField(max_length=255, verbose_name='Titel')),
                ('slug', models.SlugField(blank=True, null=True, verbose_name='Url onderdeel')),
                ('omschrijving', models.TextField(blank=True, null=True, verbose_name='Omschrijving')),
            ],
            options={
                'verbose_name': 'Thema',
                'verbose_name_plural': "Thema's",
                'ordering': ['order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Voorwaarde',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titel', models.CharField(max_length=255, verbose_name='titel')),
                ('order', models.PositiveIntegerField(db_index=True, default=0, editable=False)),
                ('datum_gecreeerd', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Datum gecreëerd')),
                ('datum_opgeslagen', models.DateTimeField(auto_now=True, null=True, verbose_name='Datum opgeslagen')),
                ('regeling', adminsortable.fields.SortableForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='jeugdzorg.Regeling', verbose_name='Regeling')),
            ],
            options={
                'verbose_name': 'Voorwaarde',
                'verbose_name_plural': 'Voorwaarden',
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='regeling',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='jeugdzorg.TaggedRegeling', to='jeugdzorg.RegelingTag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='regeling',
            name='themas',
            field=sortedm2m.fields.SortedManyToManyField(blank=True, help_text=None, to='jeugdzorg.Thema'),
        ),
        migrations.AddField(
            model_name='profielnaarthema',
            name='thema',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='themanaarprofiel', to='jeugdzorg.Thema', verbose_name='Thema'),
        ),
        migrations.AddField(
            model_name='profielnaarregeling',
            name='regeling',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='regelingnaarprofiel', to='jeugdzorg.Regeling', verbose_name='Regeling'),
        ),
        migrations.AddField(
            model_name='profiel',
            name='organisatie_lijst',
            field=models.ManyToManyField(through='jeugdzorg.ProfielNaarOrganisatie', to='jeugdzorg.Organisatie'),
        ),
        migrations.AddField(
            model_name='profiel',
            name='regeling_lijst',
            field=models.ManyToManyField(through='jeugdzorg.ProfielNaarRegeling', to='jeugdzorg.Regeling'),
        ),
        migrations.AddField(
            model_name='profiel',
            name='thema_lijst',
            field=models.ManyToManyField(through='jeugdzorg.ProfielNaarThema', to='jeugdzorg.Thema'),
        ),
        migrations.AddField(
            model_name='gebied',
            name='stadsdeel',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='jeugdzorg.Stadsdeel', verbose_name='Stadsdeel'),
        ),
        migrations.AlterUniqueTogether(
            name='profielnaarthema',
            unique_together={('profiel', 'thema')},
        ),
        migrations.AlterUniqueTogether(
            name='profielnaarregeling',
            unique_together={('profiel', 'regeling')},
        ),
        migrations.AlterUniqueTogether(
            name='profielnaarorganisatie',
            unique_together={('profiel', 'organisatie')},
        ),
    ]
